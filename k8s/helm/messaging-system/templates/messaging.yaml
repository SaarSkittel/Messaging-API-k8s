apiVersion: apps/v1
kind: Deployment
metadata:
  name: messaging
  labels:
    app: messaging

spec:
  replicas: 1
  selector:
    matchLabels:
      app: messaging

  template:
    metadata:
      labels:
        app: messaging
    spec:
      containers:
        - name: messaging
          image: saarskittel/messaging-k8s
          command: ["/bin/sh", "-c"]
          args:
            [
              "python manage.py makemigrations && python manage.py makemigrations api && python manage.py migrate && gunicorn server.wsgi:application -b 0.0.0.0:8000",
            ]
          ports:
            - containerPort: 8000
          env:
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: django-secret
                  key: postgres-username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: django-secret
                  key: postgres-password
            - name: ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: django-secret
                  key: access_token
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: django-config
                  key: postgres-port
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: django-config
                  key: postgres-host
            - name: CELERY_BROKER
              valueFrom:
                configMapKeyRef:
                  name: django-config
                  key: celery-broker
            - name: CELERY_BACKEND
              valueFrom:
                configMapKeyRef:
                  name: django-config
                  key: celery-backend

---
apiVersion: v1
kind: Service
metadata:
  name: messaging-service
spec:
  selector:
    app: messaging

  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
